// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OtzarHaSeforim.Data;

#nullable disable

namespace OtzarHaSeforim.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OtzarHaSeforim.Models.BookModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GenreBook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HighBook")
                        .HasColumnType("int");

                    b.Property<long>("SetBooksId")
                        .HasColumnType("bigint");

                    b.Property<int>("WidthBook")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SetBooksId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.LibraryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GenreLibrary")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreLibrary")
                        .IsUnique();

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.SetBooksModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ShelfId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ShelfId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.ShelfModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("HighShelf")
                        .HasColumnType("int");

                    b.Property<long>("LibraryId")
                        .HasColumnType("bigint");

                    b.Property<int>("WidthShelf")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.ToTable("Shelves");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.BookModel", b =>
                {
                    b.HasOne("OtzarHaSeforim.Models.SetBooksModel", "SetBooksParent")
                        .WithMany("Books")
                        .HasForeignKey("SetBooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SetBooksParent");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.SetBooksModel", b =>
                {
                    b.HasOne("OtzarHaSeforim.Models.ShelfModel", "ShelfParent")
                        .WithMany("SetBooks")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelfParent");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.ShelfModel", b =>
                {
                    b.HasOne("OtzarHaSeforim.Models.LibraryModel", "LibraryParent")
                        .WithMany("Shelves")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LibraryParent");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.LibraryModel", b =>
                {
                    b.Navigation("Shelves");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.SetBooksModel", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("OtzarHaSeforim.Models.ShelfModel", b =>
                {
                    b.Navigation("SetBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
